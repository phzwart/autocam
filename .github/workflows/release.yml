name: Release

on:
  push:
    branches:
      - main
      - master

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install Poetry
        run: |
          pip install --constraint=.github/workflows/constraints.txt poetry
          poetry --version
        shell: bash

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v3.0.0
        with:
          version-command: |
            bash -o pipefail -c "grep '^version = ' pyproject.toml | sed \"s/version = '\\(.*\\)'/\\1/\""

      - name: Bump version for developmental release
        if: "! steps.check-version.outputs.tag"
        run: |
          poetry version patch
          version=$(poetry version | awk '{ print $2 }')
          dev_version="${version}-dev.$(date +%s)"
          poetry version "$dev_version"
          echo "Set developmental version to: $dev_version"

      - name: Show version in pyproject.toml
        run: |
          echo "Current version in pyproject.toml:"
          grep '^version = ' pyproject.toml
          echo "Full pyproject.toml content:"
          cat pyproject.toml

      - name: Clean build artifacts
        run: rm -rf dist/ build/

      - name: Build package
        run: |
          poetry build --ansi

      - name: Verify wheel metadata
        run: |
          echo "Checking wheel metadata:"
          ls -la dist/
          if [ -f dist/*.whl ]; then
            unzip -p dist/*.whl */METADATA | head -10
          fi

      - name: Publish package on PyPI
        if: steps.check-version.outputs.tag
        uses: pypa/gh-action-pypi-publish@v1.9.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true

      - name: Publish package on TestPyPI
        if: "! steps.check-version.outputs.tag"
        uses: pypa/gh-action-pypi-publish@v1.9.0
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

      - name: Publish the release notes
        uses: release-drafter/release-drafter@v6.0.0
        with:
          publish: ${{ steps.check-version.outputs.tag != '' }}
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
